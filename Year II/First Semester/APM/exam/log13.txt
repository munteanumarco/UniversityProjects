Id: 5
Execution stack: 
(Ref(int) v1|(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
Ref(int) v1
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
Ref(int) v1
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
Ref(int) v2
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
Ref(int) v2
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
int x
(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
int x
(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))
Symbol table: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(int q|(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))))
Symbol table: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
int q
(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))
Symbol table: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
int q
(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))
Symbol table: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(New(v1, 20)|(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
New(v1, 20)
(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
New(v1, 20)
(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Lock Table:

Id: 5
Execution stack: 
(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 20
Lock Table:

Id: 5
Execution stack: 
(New(v2, 30)|(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 20
Lock Table:

Id: 5
Execution stack: 
New(v2, 30)
(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 20
Lock Table:

Id: 5
Execution stack: 
New(v2, 30)
(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 20
Lock Table:

Id: 5
Execution stack: 
(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

Id: 5
Execution stack: 
(newLock(x)|(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

Id: 5
Execution stack: 
newLock(x)
(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

Id: 5
Execution stack: 
newLock(x)
(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

Id: 5
Execution stack: 
(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
(Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))|(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))
(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
Fork((Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))))
(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 6
Execution stack: 
(Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
(newLock(q)|(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 6
Execution stack: 
(Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))|(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
newLock(q)
(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 6
Execution stack: 
Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))
(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
newLock(q)
(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 6
Execution stack: 
Fork((lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))))
(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1

Id: 5
Execution stack: 
(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 6
Execution stack: 
(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 7
Execution stack: 
(lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
(Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 6
Execution stack: 
(lock(x)|(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x)))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 7
Execution stack: 
(lock(x)|(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 7
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
Fork((Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))))
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 7
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 7
Execution stack: 
(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 8
Execution stack: 
(Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 5
Execution stack: 
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 7
Execution stack: 
(WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 8
Execution stack: 
(Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))|(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 5
Execution stack: 
NopStatement
(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 7
Execution stack: 
WriteHeap(v1, ReadHeap(v1) - 1)
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 8
Execution stack: 
Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))
(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 5
Execution stack: 
NopStatement
(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 7
Execution stack: 
WriteHeap(v1, ReadHeap(v1) - 1)
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 8
Execution stack: 
Fork((lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))))
(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 5
Execution stack: 
(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 7
Execution stack: 
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 8
Execution stack: 
(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 9
Execution stack: 
(lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 5
Execution stack: 
(NopStatement|(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 6
Execution stack: 
lock(x)
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 7
Execution stack: 
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 8
Execution stack: 
(lock(q)|(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 9
Execution stack: 
(lock(q)|(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 7
1 -> -1

Id: 5
Execution stack: 
NopStatement
(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 6
Execution stack: 
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 7
Execution stack: 
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 8
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 5
Execution stack: 
NopStatement
(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 6
Execution stack: 
(WriteHeap(v1, ReadHeap(v1) * 10)|unlock(x))
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 8
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> -1

Id: 5
Execution stack: 
(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 6
Execution stack: 
WriteHeap(v1, ReadHeap(v1) * 10)
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 8
Execution stack: 
(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 5
Execution stack: 
(NopStatement|(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 6
Execution stack: 
WriteHeap(v1, ReadHeap(v1) * 10)
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 8
Execution stack: 
(WriteHeap(v2, ReadHeap(v2) * 10)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 19
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 5
Execution stack: 
NopStatement
(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 6
Execution stack: 
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 8
Execution stack: 
WriteHeap(v2, ReadHeap(v2) * 10)
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 5
Execution stack: 
NopStatement
(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 6
Execution stack: 
unlock(x)
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 8
Execution stack: 
WriteHeap(v2, ReadHeap(v2) * 10)
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 30
Lock Table:
0 -> 6
1 -> 8

Id: 5
Execution stack: 
(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 8

Id: 6
Execution stack: 
Symbol table: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 8

Id: 8
Execution stack: 
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 8

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 8

Id: 5
Execution stack: 
(NopStatement|(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 8

Id: 8
Execution stack: 
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 8

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 8

Id: 5
Execution stack: 
NopStatement
(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> -1

Id: 8
Execution stack: 
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> -1

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
NopStatement
(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> -1

Id: 9
Execution stack: 
lock(q)
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 9
Execution stack: 
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 5
Execution stack: 
(lock(x)|(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 9
Execution stack: 
(WriteHeap(v2, ReadHeap(v2) + 5)|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 5
Execution stack: 
lock(x)
(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 9
Execution stack: 
WriteHeap(v2, ReadHeap(v2) + 5)
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 5
Execution stack: 
lock(x)
(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 9
Execution stack: 
WriteHeap(v2, ReadHeap(v2) + 5)
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 300
Lock Table:
0 -> -1
1 -> 9

Id: 5
Execution stack: 
(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> 9

Id: 9
Execution stack: 
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> 9

Id: 5
Execution stack: 
(Print(ReadHeap(v1))|(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q)))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> 9

Id: 9
Execution stack: 
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> 9

Id: 5
Execution stack: 
Print(ReadHeap(v1))
(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> -1

Id: 9
Execution stack: 
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> -1

Id: 5
Execution stack: 
Print(ReadHeap(v1))
(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> -1

Id: 5
Execution stack: 
(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> -1

Id: 5
Execution stack: 
(unlock(x)|(lock(q)|(Print(ReadHeap(v2))|unlock(q))))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> -1

Id: 5
Execution stack: 
unlock(x)
(lock(q)|(Print(ReadHeap(v2))|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> -1

Id: 5
Execution stack: 
unlock(x)
(lock(q)|(Print(ReadHeap(v2))|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> 5
1 -> -1

Id: 5
Execution stack: 
(lock(q)|(Print(ReadHeap(v2))|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
(lock(q)|(Print(ReadHeap(v2))|unlock(q)))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
lock(q)
(Print(ReadHeap(v2))|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
lock(q)
(Print(ReadHeap(v2))|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> -1

Id: 5
Execution stack: 
(Print(ReadHeap(v2))|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> 5

Id: 5
Execution stack: 
(Print(ReadHeap(v2))|unlock(q))
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> 5

Id: 5
Execution stack: 
Print(ReadHeap(v2))
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> 5

Id: 5
Execution stack: 
Print(ReadHeap(v2))
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> 5

Id: 5
Execution stack: 
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
305
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> 5

Id: 5
Execution stack: 
unlock(q)
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
305
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> 5

Id: 5
Execution stack: 
Symbol table: 
q -> 1
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
190
305
File table:
Heap memory:
1 -> 190
2 -> 305
Lock Table:
0 -> -1
1 -> -1

