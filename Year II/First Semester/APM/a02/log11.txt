Id: 11
Execution stack: 
(int v ; (Ref(int) a ; (v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))))))
Symbol table: 
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
int v
(Ref(int) a ; (v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))))
Symbol table: 
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
int v
(Ref(int) a ; (v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))))
Symbol table: 
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
(Ref(int) a ; (v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
(Ref(int) a ; (v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
Ref(int) a
(v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
Ref(int) a
(v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
(v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))))
Symbol table: 
a -> (0, int)
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
(v = 10 ; (New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))))
Symbol table: 
a -> (0, int)
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
v = 10
(New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))
Symbol table: 
a -> (0, int)
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
v = 10
(New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))
Symbol table: 
a -> (0, int)
v -> 0
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
(New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
(New(a, 22) ; (Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a)))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
New(a, 22)
(Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
New(a, 22)
(Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap:

Id: 11
Execution stack: 
(Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
(Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))) ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a))))))
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
Fork(((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a))))))
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 12
Execution stack: 
((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 12
Execution stack: 
((a,30) ; (v = 32 ; (Print(v) ; Print(ReadHeap(a)))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
Print(v)
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 12
Execution stack: 
(a,30)
(v = 32 ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
Print(v)
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 12
Execution stack: 
(a,30)
(v = 32 ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
File table:
Heap:
1 -> 22

Id: 11
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
(v = 32 ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
File table:
Heap:
1 -> 30

Id: 11
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
(v = 32 ; (Print(v) ; Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
File table:
Heap:
1 -> 30

Id: 11
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
30
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
v = 32
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
30
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
v = 32
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
30
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
30
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
(Print(v) ; Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
30
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
Print(v)
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
30
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
Print(v)
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
30
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
30
32
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
30
32
File table:
Heap:
1 -> 30

Id: 12
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
30
32
30
File table:
Heap:
1 -> 30

